<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="pl.com.setvar.dofi.model.Tag" schema="APP" table="TAGS" discriminator-value="0" abstract="true">
        <id name="id" type="int">
            <column name="ID"/>
            <generator class="identity"/>
        </id>
        <discriminator column="CATEGORY" type="short" />
        <property name="tagname" type="string">
            <column length="50" name="TAGNAME" not-null="true" unique="true"/>
        </property>
        <many-to-one name="parent" class="pl.com.setvar.dofi.model.Tag" column="PARENT" cascade="all" />
        <set name="taglinks" table="TAGLINKS" cascade="save-update, delete" inverse="true">
            <key column="TAG" not-null="true" />
            <one-to-many class="pl.com.setvar.dofi.model.Taglink" />
        </set>
        <set name="operations" table="OPERATION_TAGS" cascade="save-update" inverse="true">
            <key>
                <column name="TAG" not-null="true" />
            </key>
            <many-to-many entity-name="pl.com.setvar.dofi.model.Operation">
                <column name="OPERATION" not-null="true" />
            </many-to-many>
        </set>
        <subclass name="pl.com.setvar.dofi.model.Category" extends="pl.com.setvar.dofi.model.Tag" discriminator-value="1">
        </subclass>
    </class>
    <sql-query name="findByTagnameAndTaglinkWord">
        <return alias="Tag" class="pl.com.setvar.dofi.model.Tag" />
      <![CDATA[
            SELECT t1.* FROM tags t1 WHERE t1.tagname LIKE :criteria
            UNION ALL
            SELECT t2.* FROM tags t2 JOIN taglinks tl ON tl.tag = t2.id WHERE tl.word LIKE :criteria
        ]]>
    </sql-query>
</hibernate-mapping>
